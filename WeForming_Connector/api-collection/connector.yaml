openapi: 3.0.0
info:
  title: EDC
  version: 1.0.0
servers:
  - url: http://{{provider_url}}:15588
  - url: http://{{consumer_url}}:15588
  - url: http://{{provider_url}}:8003
  - url: http://{{consumer_url}}:9003
  - url: http://localhost:9002
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Provider Files
  - name: Consumer Files
paths:
  /api/files/upload:
    post:
      tags:
        - Consumer Files
      summary: upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/files:
    get:
      tags:
        - Consumer Files
      summary: list
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/files/{file_id}:
    get:
      tags:
        - Consumer Files
      summary: by-id
      parameters:
        - name: file_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/files/import:
    post:
      tags:
        - Consumer Files
      summary: import
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: ebbcc527-2535-4cc6-b12c-f01f5b3f0c8b
                fileContent: >-
                  
                fileName: 014DF252515D561ADB2843F68F9A583491877E7C.torrent
                fileSize: 26587
                creationDate: '2024-06-18T14:36:10.264586Z'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /management/v2/dataplanes:
    post:
      tags:
        - default
      summary: '1. [Provider] Register data plane instance '
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                '@context':
                  '@vocab': https://w3id.org/edc/v0.0.1/ns/
                edctype: dataspaceconnector:dataplaneinstance
                '@id': http-pull-provider-dataplane
                url: '{{provider_url}}:8005/control/transfer'
                allowedSourceTypes:
                  - HttpData
                allowedDestTypes:
                  - HttpProxy
                  - HttpData
                properties:
                  publicApiUrl: '{{provider_url}}:8002/public/'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /management/v3/assets:
    post:
      tags:
        - default
      summary: 2. [Provider] Create an Asset
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                '@context':
                  '@vocab': https://w3id.org/edc/v0.0.1/ns/
                '@id': assetId2
                properties:
                  name: product description
                  contenttype: application/json
                dataAddress:
                  type: HttpData
                  name: Test asset
                  baseUrl: '{{provider_url}}:15588/api/files/{{file_id}}'
                  proxyPath: 'true'
      parameters:
        - name: content-type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /management/v2/policydefinitions:
    post:
      tags:
        - default
      summary: 3. [Provider] Create a Policy
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                '@context':
                  '@vocab': https://w3id.org/edc/v0.0.1/ns/
                  odrl: http://www.w3.org/ns/odrl/2/
                '@id': aPolicy
                policy:
                  '@context': http://www.w3.org/ns/odrl.jsonld
                  '@type': Set
                  permission: []
                  prohibition: []
                  obligation: []
      parameters:
        - name: content-type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /management/v2/contractdefinitions:
    post:
      tags:
        - default
      summary: 4. [Provider] Create a contract definition
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                '@context':
                  '@vocab': https://w3id.org/edc/v0.0.1/ns/
                '@id': '1'
                accessPolicyId: aPolicy
                contractPolicyId: aPolicy
                assetsSelector: []
      parameters:
        - name: content-type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /management/v2/catalog/request/:
    post:
      tags:
        - default
      summary: 5. [Consumer] Fetch provider's catalog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                '@context':
                  '@vocab': https://w3id.org/edc/v0.0.1/ns/
                counterPartyAddress: '{{provider_url}}:8004/protocol'
                protocol: dataspace-protocol-http
                querySpec:
                  filterExpression:
                    - operandLeft: id
                      operator: '='
                      operandRight: f6cd1982-1971-4cd1-8019-4c024ac71376
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /management/v2/contractnegotiations:
    post:
      tags:
        - default
      summary: 6. [Consumer] Negotiate a contract
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                '@context':
                  '@vocab': https://w3id.org/edc/v0.0.1/ns/
                '@type': ContractRequest
                counterPartyAddress: '{{provider_url}}:8004/protocol'
                protocol: dataspace-protocol-http
                policy:
                  '@context': http://www.w3.org/ns/odrl.jsonld
                  '@id': '{{contract-offer-id}}'
                  '@type': Offer
                  assigner: provider
                  target: assetId
      parameters:
        - name: content-type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /management/v2/contractnegotiations/{contract-negotiation-id}:
    get:
      tags:
        - default
      summary: 7. [Cunsumer] Check negotiation status
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: contract-negotiation-id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /management/v2/transferprocesses/:
    post:
      tags:
        - default
      summary: 8. [Consumer] Pull
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                '@context':
                  '@vocab': https://w3id.org/edc/v0.0.1/ns/
                '@type': TransferRequestDto
                connectorId: provider
                counterPartyAddress: '{{provider_url}}:8004/protocol'
                contractId: '{{contract-agreement-id}}'
                assetId: assetId
                protocol: dataspace-protocol-http
                transferType: HttpData-PULL
                dataDestination:
                  type: HttpProxy
                  baseUrl: '{{consumer_url}}:15589/api/files/import'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /management/v2/transferprocesses:
    post:
      tags:
        - default
      summary: 8.2 [Consumer] Push
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                '@context':
                  '@vocab': https://w3id.org/edc/v0.0.1/ns/
                '@type': TransferRequestDto
                connectorId: provider
                counterPartyAddress: '{{provider_url}}:8004/protocol'
                contractId: '{{contract-agreement-id}}'
                assetId: assetId
                protocol: dataspace-protocol-http
                transferType: HttpData-PUSH
                dataDestination:
                  type: HttpData
                  baseUrl: '{{consumer_url}}:15589/api/files/import'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /management/v2/transferprocesses/{transfer-processes-id}:
    get:
      tags:
        - default
      summary: 9. [Consumer] Check the transfer status
      parameters:
        - name: transfer-processes-id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /public/:
    get:
      tags:
        - default
      summary: 10. [Consumer] Get data
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            Basic
            eyJraWQiOiJwdWJsaWMta2V5IiwiYWxnIjoiUlMyNTYifQ.eyJleHAiOjE3MTc2NjQ
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
